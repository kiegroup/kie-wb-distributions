<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <groupId>org.kie</groupId>
    <artifactId>kie-wb-distributions</artifactId>
    <version>7.59.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>business-central-tests</artifactId>
  <packaging>pom</packaging>

  <name>Business Central Tests :: Parent</name>
  <description>Parent for integration tests for Business Central</description>

  <modules>
    <module>business-central-tests-rest</module>
    <module>business-central-tests-gui</module>
  </modules>

  <properties>
    <deployable.context>business-central</deployable.context>
    <deployable.groupId>org.kie</deployable.groupId>
    <deployable.artifactId>business-central</deployable.artifactId>
    <deployable.version>${version.org.kie}</deployable.version>

    <deployment.timeout>90000</deployment.timeout>

    <container.host>localhost</container.host>

    <containers.dir>${project.build.directory}/containers</containers.dir>
    <configurations.dir>${project.build.directory}/configurations</configurations.dir>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>business-central-tests-rest</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>business-central-tests-gui</artifactId>
        <version>${version.org.kie}</version>
      </dependency>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>business-central-webapp</artifactId>
        <version>${deployable.version}</version>
        <classifier>${deployable.classifier.standalone}</classifier>
      </dependency>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>business-monitoring-webapp</artifactId>
        <version>${deployable.version}</version>
        <classifier>${deployable.classifier.standalone}</classifier>
      </dependency>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>business-central</artifactId>
        <version>${deployable.version}</version>
        <classifier>${deployable.classifier.wildfly}</classifier>
        <type>war</type>
      </dependency>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>business-monitoring</artifactId>
        <version>${deployable.version}</version>
        <classifier>${deployable.classifier.wildfly}</classifier>
        <type>war</type>
      </dependency>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>business-central</artifactId>
        <version>${deployable.version}</version>
        <classifier>${deployable.classifier.eap7}</classifier>
        <type>war</type>
      </dependency>
      <dependency>
        <groupId>org.kie</groupId>
        <artifactId>business-monitoring</artifactId>
        <version>${deployable.version}</version>
        <classifier>${deployable.classifier.eap7}</classifier>
        <type>war</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven3-plugin</artifactId>
          <configuration>
            <container>
              <containerId>${cargo.container.id}</containerId>
              <systemProperties>
                <kie.maven.settings.custom>${project.build.testOutputDirectory}/settings.xml</kie.maven.settings.custom>
              </systemProperties>
            </container>
            <configuration>
              <properties>
                <cargo.servlet.port>${container.port}</cargo.servlet.port>
                <cargo.servlet.users>
                  admin:admin1234;:admin|restAll:restAll1234;:admin,rest-all|restProject:restProject1234;:rest-project|noRest:noRest1234;:user
                </cargo.servlet.users>
              </properties>
            </configuration>
          </configuration>
          <executions>
            <execution>
              <id>start-container</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>start</goal>
              </goals>
            </execution>
            <execution>
              <id>stop-container</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>stop</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <configuration>
            <systemPropertyVariables>
              <kie.wb.url>http://${container.host}:${container.port}/${deployable.context}</kie.wb.url>
              <kie.controller.url>ws://${container.host}:${container.port}/${deployable.context}/websocket/controller</kie.controller.url>
              <org.uberfire.nio.git.daemon.port>${cargo.git.port}</org.uberfire.nio.git.daemon.port>
            </systemPropertyVariables>
            <failIfNoTests>false</failIfNoTests>
            <argLine>-Xmx1024m -Dfile.encoding=UTF-8</argLine>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>reserve-network-port</id>
              <goals>
                <goal>reserve-network-port</goal>
              </goals>
              <phase>pre-integration-test</phase>
              <configuration>
                <portNames>
                  <portName>container.port</portName>
                </portNames>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>business-central</id>
      <properties>
        <deployable.groupId>org.kie</deployable.groupId>
        <deployable.artifactId>business-central</deployable.artifactId>
        <deployable.context>business-central</deployable.context>
      </properties>
    </profile>

    <profile>
      <id>business-monitoring</id>
      <properties>
        <deployable.groupId>org.kie</deployable.groupId>
        <deployable.artifactId>business-monitoring</deployable.artifactId>
        <deployable.context>business-central</deployable.context>
      </properties>
    </profile>

    <profile>
      <id>wildfly</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.kie</groupId>
          <artifactId>business-central</artifactId>
          <classifier>${deployable.classifier.wildfly}</classifier>
          <scope>test</scope>
          <type>war</type>
        </dependency>
        <dependency>
          <groupId>org.kie</groupId>
          <artifactId>business-monitoring</artifactId>
          <classifier>${deployable.classifier.wildfly}</classifier>
          <scope>test</scope>
          <type>war</type>
        </dependency>
      </dependencies>
      <properties>
        <cargo.container.id>wildfly23x</cargo.container.id>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>build-helper-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>reserve-network-port</id>
                  <goals>
                    <goal>reserve-network-port</goal>
                  </goals>
                  <phase>process-resources</phase>
                  <configuration>
                    <portNames>
                      <portName>container.port</portName>
                      <portName>cargo.https.port</portName>
                      <portName>cargo.management.port</portName>
                      <portName>cargo.ajp.port</portName>
                      <portName>cargo.git.port</portName>
                    </portNames>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven3-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <artifactInstaller>
                    <groupId>org.wildfly</groupId>
                    <artifactId>wildfly-dist</artifactId>
                    <version>${version.org.wildfly}</version>
                  </artifactInstaller>
                  <systemProperties>
                    <jboss.https.port>${cargo.https.port}</jboss.https.port>
                    <org.uberfire.nio.git.daemon.port>${cargo.git.port}</org.uberfire.nio.git.daemon.port>
                    <org.uberfire.nio.git.ssh.enabled>false</org.uberfire.nio.git.ssh.enabled>
                    <!-- https://issues.redhat.com/browse/AF-2523 -->
                    <org.uberfire.ext.security.management.wildfly.cli.port>${cargo.management.port}</org.uberfire.ext.security.management.wildfly.cli.port>
                    <datasource.management.wildfly.port>${cargo.management.port}</datasource.management.wildfly.port>
                    <!-- disable incremental build to make tests less IO intensive and more stable (https://issues.jboss.org/browse/AF-1310) -->
                    <build.enable-incremental>false</build.enable-incremental>
                  </systemProperties>
                  <timeout>240000</timeout>
                </container>
                <configuration>
                  <properties>
                    <cargo.jboss.configuration>standalone</cargo.jboss.configuration>
                    <cargo.jvmargs>-Xmx1024m</cargo.jvmargs>
                    <cargo.servlet.port>${container.port}</cargo.servlet.port>
                    <cargo.jboss.management-http.port>${cargo.management.port}</cargo.jboss.management-http.port>
                    <cargo.jboss.ajp.port>${cargo.ajp.port}</cargo.jboss.ajp.port>
                  </properties>
                </configuration>
                <deployables>
              <deployable>
                <groupId>${deployable.groupId}</groupId>
                <artifactId>${deployable.artifactId}</artifactId>
                <classifier>${deployable.classifier.wildfly}</classifier>
                <type>war</type>
                <properties>
                  <context>${deployable.context}</context>
                </properties>
                <pingURL>http://${container.host}:${container.port}/${deployable.context}</pingURL>
                <pingTimeout>${deployment.timeout}</pingTimeout>
              </deployable>
            </deployables>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>eap7</id>
      <activation>
        <property>
          <name>container</name>
          <value>eap7</value>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.kie</groupId>
          <artifactId>business-central</artifactId>
          <classifier>${deployable.classifier.eap7}</classifier>
          <scope>test</scope>
          <type>war</type>
        </dependency>
      </dependencies>
      <properties>
        <!-- The EAP 7.x binary can't be anonymously downloaded due to license issues. It can be downloaded manually
             and for free (e.g. from http://www.jboss.org/products/eap/download/) and the zip location needs to be specified
             here or via system property when running the build (don't forget to use the `file://` prefix when
             referencing the zip from local filesystem). -->
        <eap7.download.url>valid-url-for-eap-7-zip-needs-to-be-specified-here-or-via-cmd-line</eap7.download.url>
        <cargo.git.port>9418</cargo.git.port>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven3-plugin</artifactId>
              <configuration>
                <container>
                  <type>installed</type>
                  <!-- WildFly ~= EAP 7, so just reuse the wildfly23x containerId -->
                  <containerId>wildfly23x</containerId>
                  <type>installed</type>
                  <zipUrlInstaller>
                    <url>${eap7.download.url}</url>
                  </zipUrlInstaller>
                </container>
                <configuration>
                  <properties>
                    <cargo.jboss.configuration>standalone-full</cargo.jboss.configuration>
                    <cargo.jvmargs>-Xmx1024m</cargo.jvmargs>
                  </properties>
                </configuration>
                <deployables>
                  <deployable>
                    <groupId>${deployable.groupId}</groupId>
                    <artifactId>${deployable.artifactId}</artifactId>
                    <classifier>${deployable.classifier.eap7}</classifier>
                    <type>war</type>
                    <properties>
                      <context>${deployable.context}</context>
                    </properties>
                    <pingURL>http://${container.host}:${container.port}/${deployable.context}</pingURL>
                    <pingTimeout>${deployment.timeout}</pingTimeout>
                  </deployable>
                </deployables>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <id>wildfly-swarm</id>
      <activation>
        <property>
          <name>container</name>
          <value>wildfly-swarm</value>
        </property>
      </activation>
      <properties>
        <deployable.context/>
        <cargo.container.id>wildfly-swarm2017x</cargo.container.id>
        <container.port>8080</container.port>
        <cargo.git.port>9418</cargo.git.port>
        <workbench.standalone.bundle.path>${containers.dir}/${workbench.standalone.bundle.name}</workbench.standalone.bundle.path>
        <workbench.standalone.bundle.name>${deployable.artifactId}-webapp-standalone.jar</workbench.standalone.bundle.name>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-dependency-plugin</artifactId>
              <executions>
                <execution>
                  <id>download-standalone-wb</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>copy</goal>
                  </goals>
                  <configuration>
                    <artifactItems>
                      <artifactItem>
                        <groupId>${deployable.groupId}</groupId>
                        <artifactId>${deployable.artifactId}-webapp</artifactId>
                        <version>${deployable.version}</version>
                        <classifier>${deployable.classifier.standalone}</classifier>
                        <type>jar</type>
                        <outputDirectory>${containers.dir}</outputDirectory>
                        <destFileName>${workbench.standalone.bundle.name}</destFileName>
                      </artifactItem>
                    </artifactItems>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven3-plugin</artifactId>
              <executions>
                <execution>
                  <id>start-container</id>
                  <phase>pre-integration-test</phase>
                  <goals>
                    <goal>start</goal>
                  </goals>
                  <configuration>
                    <container>
                      <containerId>${cargo.container.id}</containerId>
                      <contextKey>standalone-wb</contextKey>
                      <type>installed</type>
                      <home>${workbench.standalone.bundle.path}</home>
                      <systemProperties>
                        <datasource.management.wildfly.admin>admin</datasource.management.wildfly.admin>
                        <org.uberfire.ext.security.management.wildfly.cli.user>admin</org.uberfire.ext.security.management.wildfly.cli.user>
                      </systemProperties>
                    </container>
                    <configuration>
                      <type>standalone</type>
                      <home>${configurations.dir}/standalone-profile</home>
                      <properties>
                        <cargo.swarm.ping.url>http://localhost:8080/</cargo.swarm.ping.url>
                        <cargo.jvmargs>-Xmx1G -XX:MaxMetaspaceSize=400m</cargo.jvmargs>
                      </properties>
                    </configuration>
                  </configuration>
                </execution>
                <execution>
                  <id>stop-container</id>
                  <phase>post-integration-test</phase>
                  <goals>
                    <goal>stop</goal>
                  </goals>
                  <configuration>
                    <container>
                      <containerId>wildfly-swarm2017x</containerId>
                      <contextKey>standalone-wb</contextKey>
                      <type>installed</type>
                    </container>
                    <configuration>
                      <type>standalone</type>
                      <properties>
                        <cargo.swarm.ping.url>http://localhost:8080/</cargo.swarm.ping.url>
                      </properties>
                    </configuration>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>productized</id>
      <activation>
        <property>
          <name>productized</name>
        </property>
      </activation>
      <properties>
        <deployable.classifier.eap7>eap7-redhat</deployable.classifier.eap7>
        <deployable.classifier.standalone>standalone-redhat</deployable.classifier.standalone>
        <deployable.classifier.wildfly>there-is-no-wildfly-war-for-product</deployable.classifier.wildfly>
      </properties>
    </profile>
  </profiles>
</project>
